'use client';

import { useState } from 'react';
import styles from './Envelope.module.css'; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤

const Envelope = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [isPopped, setIsPopped] = useState(false);

  const handleOpenEnvelope = () => {
    if (isOpen) {
      // ‡∏ñ‡πâ‡∏≤‡∏ã‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î
      setIsOpen(false);
      setIsPopped(false);
    } else {
      // ‡∏ñ‡πâ‡∏≤‡∏ã‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏∏‡πà‡∏á
      setIsPopped(true);
      setTimeout(() => setIsOpen(true), 300); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏ã‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏∏‡πà‡∏á
    }
  };

  const handleCloseEnvelope = (e: React.MouseEvent) => {
    if (!e.target.closest(`.${styles.envelope}`)) {
      // ‡∏õ‡∏¥‡∏î‡∏ã‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
      setIsOpen(false);
      setIsPopped(false);
    }
  };

  return (
    <div className={styles.container} onClick={handleCloseEnvelope}>
      <div
        className={`${styles.envelope} ${isOpen ? styles.open : ''}`}
        onClick={handleOpenEnvelope}
      >
        <div className={styles.flap}></div>
        <div className={styles.body}></div>
      </div>

      {/* ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      <div className={`${styles.paper} ${isOpen ? styles.show : ''}`}>
        <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞! üéâ</p>
        <br />
        <p>‡∏Ñ‡∏∏‡∏ì‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡πâ‡∏ß!</p>
      </div>

      {/* ‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ */}
      {isPopped && (
        <div className={styles.particles}>
          {Array.from({ length: 20 }).map((_, index) => (
            <div
              key={index}
              className={styles.particle}
              style={{
                top: `${Math.random() * 80}%`, // ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô-‡∏•‡πà‡∏≤‡∏á
                left: `${Math.random() * 80}%`, // ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤
                animationDelay: `${Math.random() * 0.5}s`, // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                backgroundColor: `hsl(${Math.random() * 360}, 100%, 50%)`, // ‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°
              }}
            />
          ))}
        </div>
      )}
    </div>
  );
};

export default Envelope;
